version: 0.2

env:
  variables:
    STACK_NAME: "resume-app-stack"

phases:
  install:
    runtime-versions:
      nodejs: 12
      python: 3.7
    commands:
      - pip install --user aws-sam-cli
      - USER_BASE_PATH=$(python -m site --user-base)
      - export PATH=$PATH:$USER_BASE_PATH/bin
      ## pandoc
      - wget https://github.com/jgm/pandoc/releases/download/2.14.0.1/pandoc-2.14.0.1-linux-amd64.tar.gz
      - tar -xvf pandoc-2.14.0.1-linux-amd64.tar.gz
      ## pantomjs
      - npm install phantomjs
  pre_build:
    commands:
      - chmod +x create-or-update-stack.sh
      - ./create-or-update-stack.sh us-east-1 ${STACK_NAME} --template-body file://cloudformation.yaml
  build:
    commands:
      - BUCKET=$(aws cloudformation describe-stacks --stack-name $STACK_NAME --region us-east-1 --query "Stacks[].Outputs[?OutputKey=='Bucket'].OutputValue" --output text)
      - pandoc-2.14.0.1/bin/pandoc --section-divs -s resume/resume.md -H resume/header.html -c resume/resume.css -o resume/resume.html
      - mkdir html/pdf
      - node_modules/.bin/phantomjs bin/rasterize.js resume/resume.html html/pdf/resume.pdf 0.7
      - aws s3 sync html/ s3://${BUCKET}/
  post_build:
    commands:
      ##########
      ## Invalidate cache
      ##########
      # - CLOUDFRONT_DISTRIBUTION_ID=$(aws cloudformation describe-stacks --stack-name $STACK_NAME --region us-east-1 --query "Stacks[].Outputs[?OutputKey=='CloudfrontDistributionId'].OutputValue" --output text)
      # - INVALIDATION_ID=$(aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths /index.html /script.js --query "Invalidation.Id" --output text)
      # - aws cloudfront wait invalidation-completed --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --id $INVALIDATION_ID
