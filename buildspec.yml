version: 0.2

env:
  variables:
    STACK_NAME: "resume-app-stack"

phases:
  install:
    runtime-versions:
      nodejs: 12
      python: 3.7
    commands:
      - pip install --user aws-sam-cli
      - USER_BASE_PATH=$(python -m site --user-base)
      - export PATH=$PATH:$USER_BASE_PATH/bin
  pre_build:
    commands:
      - chmod +x create-or-update-stack.sh
      - ./create-or-update-stack.sh us-east-1 ${STACK_NAME} --template-body file://cloudformation.yaml
  build:
    commands:
      - BUCKET=$(aws cloudformation describe-stacks --stack-name $STACK_NAME --region us-east-1 --query "Stacks[].Outputs[?OutputKey=='Bucket'].OutputValue" --output text)
      # - sam package --template-file serverless.template.yml --s3-bucket $BUCKET --s3-prefix sam/ --output-template-file packaged-template.yml
      # - sam deploy --template-file packaged-template.yml --stack-name Brewery-API-and-CRON --region us-east-1 --capabilities CAPABILITY_IAM
      # - API_KEY=$(aws ssm get-parameter --name /brewery-app/api-key --with-decryption --query "Parameter.Value" --output text)
      # - SHEET_ID=$(aws ssm get-parameter --name /brewery-app/sheet-id --with-decryption --query "Parameter.Value" --output text)
      # - touch html/local_api_keys.js
      # - echo "var API_KEY = \"${API_KEY}\"" >> html/local_api_keys.js
      # - echo "var SHEET_ID = \"${SHEET_ID}\"" >> html/local_api_keys.js
      - npm install phantomjs
      - mkdir html/pdf
      - ls bin
      - ls node_modules/.bin/
      - bin/phantomjs bin/rasterize.js ${HTML_DIR}/resume.html html/pdf/resume.pdf 0.7
      - aws s3 sync html/ s3://${BUCKET}/

  post_build:
    commands:
      ##########
      ## Invalidate cache
      ##########
      # - CLOUDFRONT_DISTRIBUTION_ID=$(aws cloudformation describe-stacks --stack-name $STACK_NAME --region us-east-1 --query "Stacks[].Outputs[?OutputKey=='CloudfrontDistributionId'].OutputValue" --output text)
      # - INVALIDATION_ID=$(aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths /index.html /script.js --query "Invalidation.Id" --output text)
      # - aws cloudfront wait invalidation-completed --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --id $INVALIDATION_ID
